{"ast":null,"code":"var _jsxFileName = \"/Users/adityasrivastava/Desktop/MostlyStream/client/src/AuthPage/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Logo } from \"./Logo\";\nimport { AuthInput } from \"./AuthInput\";\nimport { emailValidationMessage, passwordConfValidationMessage, passwordValidationMessage, usernameValidationMessage, validateEmail, validatePassword, validatePasswordConf, validateUsername } from \"../shared/validators\";\nimport { useRegister } from \"../shared/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = ({\n  switchAuthHandler\n}) => {\n  _s();\n  const {\n    isLoading,\n    register\n  } = useRegister();\n  const [formState, setFormState] = useState({\n    email: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    username: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    passwordConf: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case \"email\":\n        isValid = validateEmail(value);\n        break;\n      case \"password\":\n        isValid = validatePassword(value);\n        break;\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"passwordConf\":\n        isValid = validatePasswordConf(formState.password.value, value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const handleRegister = event => {\n    event.preventDefault(); // do not refresh the page \n\n    register(formState.email.value, formState.password.value, formState.username.value);\n  };\n  const isSubmitButtonDisabled = !formState.password.isValid || !formState.email.isValid || !formState.username.isValid || formState.password.value !== formState.passwordConf.value || isLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      text: \"Sign up to Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"email\",\n        label: \"Email\",\n        value: formState.email.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.email.showError,\n        validationMessage: emailValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"username\",\n        label: \"Username\",\n        value: formState.username.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.username.showError,\n        validationMessage: usernameValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"password\",\n        label: \"Password\",\n        value: formState.password.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"password\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.password.showError,\n        validationMessage: passwordValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"passwordConf\",\n        label: \"Password confirmation\",\n        value: formState.passwordConf.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"password\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.passwordConf.showError,\n        validationMessage: passwordConfValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        disabled: isSubmitButtonDisabled,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: switchAuthHandler,\n      className: \"auth-form-switch-label\",\n      children: \"Already have an account ? Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"2pn0jrgQ6Cjdzyhw1y1LsZGF8hY=\", false, function () {\n  return [useRegister];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Logo","AuthInput","emailValidationMessage","passwordConfValidationMessage","passwordValidationMessage","usernameValidationMessage","validateEmail","validatePassword","validatePasswordConf","validateUsername","useRegister","jsxDEV","_jsxDEV","Register","switchAuthHandler","_s","isLoading","register","formState","setFormState","email","value","isValid","showError","password","username","passwordConf","handleInputValueChange","field","prevState","handleInputValidationOnBlur","handleRegister","event","preventDefault","isSubmitButtonDisabled","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","label","onChangeHandler","type","onBlurHandler","showErrorMessage","validationMessage","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/AuthPage/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Logo } from \"./Logo\";\nimport { AuthInput } from \"./AuthInput\";\nimport {\n  emailValidationMessage,\n  passwordConfValidationMessage,\n  passwordValidationMessage,\n  usernameValidationMessage,\n  validateEmail,\n  validatePassword,\n  validatePasswordConf,\n  validateUsername,\n} from \"../shared/validators\";\nimport { useRegister } from \"../shared/hooks\";\n\nexport const Register = ({ switchAuthHandler }) => {\n  const { isLoading, register } = useRegister();\n\n  const [formState, setFormState] = useState({\n    email: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n    username: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n    passwordConf: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n  });\n\n  const handleInputValueChange = (value, field) => {\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value,\n      },\n    }));\n  };\n\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n\n    switch (field) {\n      case \"email\":\n        isValid = validateEmail(value);\n        break;\n      case \"password\":\n        isValid = validatePassword(value);\n        break;\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"passwordConf\":\n        isValid = validatePasswordConf(formState.password.value, value);\n        break;\n      default:\n        break;\n    }\n\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid,\n      },\n    }));\n  };\n\n  const handleRegister = (event) => {\n    event.preventDefault(); // do not refresh the page \n\n    register(formState.email.value,formState.password.value,formState.username.value);\n  };\n\n  const isSubmitButtonDisabled =\n    !formState.password.isValid ||\n    !formState.email.isValid ||\n    !formState.username.isValid ||\n    formState.password.value !== formState.passwordConf.value ||\n    isLoading;\n\n  return (\n    <div className=\"register-container\">\n      <Logo text={\"Sign up to Clone\"} />\n      <form className=\"auth-form\">\n        <AuthInput\n          field=\"email\"\n          label=\"Email\"\n          value={formState.email.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"text\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.email.showError}\n          validationMessage={emailValidationMessage}\n        />\n        <AuthInput\n          field=\"username\"\n          label=\"Username\"\n          value={formState.username.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"text\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.username.showError}\n          validationMessage={usernameValidationMessage}\n        />\n        <AuthInput\n          field=\"password\"\n          label=\"Password\"\n          value={formState.password.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"password\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.password.showError}\n          validationMessage={passwordValidationMessage}\n        />\n        <AuthInput\n          field=\"passwordConf\"\n          label=\"Password confirmation\"\n          value={formState.passwordConf.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"password\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.passwordConf.showError}\n          validationMessage={passwordConfValidationMessage}\n        />\n        <button onClick={handleRegister} disabled={isSubmitButtonDisabled}>\n          Register\n        </button>\n      </form>\n      <span onClick={switchAuthHandler} className=\"auth-form-switch-label\">\n        Already have an account ? Sign in\n      </span>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}