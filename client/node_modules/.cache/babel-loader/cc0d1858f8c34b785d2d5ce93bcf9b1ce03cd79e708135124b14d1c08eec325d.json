{"ast":null,"code":"var _jsxFileName = \"/Users/adityasrivastava/Desktop/MostlyStream/client/src/DashboardPage/Content/Settings/ChannelSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { titleValidationMessage, usernameValidationMessage, avatarUrlValidationMessage, descriptionValidationMessage, validateUsername, validateAvatarUrl, validateTitle, validateDescription } from \"../../../shared/validators\";\nimport { Input } from \"../../../shared/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  field: \"username\",\n  label: \"Username\",\n  validationMessage: usernameValidationMessage,\n  type: \"text\"\n}, {\n  field: \"title\",\n  label: \"Title\",\n  validationMessage: titleValidationMessage,\n  type: \"text\"\n}, {\n  field: \"avatarUrl\",\n  label: \"Avatar Url\",\n  validationMessage: avatarUrlValidationMessage,\n  type: \"text\"\n}, {\n  field: \"description\",\n  label: \"Description\",\n  validationMessage: descriptionValidationMessage,\n  type: \"text\",\n  textarea: true\n}];\nexport const ChannelSettings = ({\n  settings,\n  saveSettings\n}) => {\n  _s();\n  const [formState, setFormState] = useState({\n    title: {\n      isValid: validateTitle(settings.title),\n      showError: false,\n      value: settings.title\n    },\n    username: {\n      isValid: validateUsername(settings.username),\n      showError: false,\n      value: settings.username\n    },\n    avatarUrl: {\n      isValid: validateAvatarUrl(settings.avatarUrl),\n      showError: false,\n      value: settings.avatarUrl\n    },\n    description: {\n      isValid: validateDescription(settings.description),\n      showError: false,\n      value: settings.description\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"avatarUrl\":\n        isValid = validateAvatarUrl(value);\n        break;\n      case \"title\":\n        isValid = validateTitle(value);\n        break;\n      case \"description\":\n        isValid = validateDescription(value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    saveSettings({\n      username: formState.username.value,\n      title: formState.title.value,\n      description: formState.description.value,\n      avatarUrl: formState.avatarUrl.value\n    });\n  };\n  const isSubmitButtonDisabled = !formState.username.isValid || !formState.title.isValid || !formState.description.isValid || !formState.avatarUrl.isValid;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"settings-form\",\n    children: [inputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n      field: input.field,\n      label: input.label,\n      value: formState[input.field].value,\n      onChangeHandler: handleInputValueChange,\n      onBlurHandler: handleInputValidationOnBlur,\n      showErrorMessage: formState[input.field].showError,\n      validationMessage: input.validationMessage,\n      type: input.type,\n      textarea: input.textarea\n    }, input.field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      disabled: isSubmitButtonDisabled,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelSettings, \"emroLkehs7L/Emh4hfSMt0yceFY=\");\n_c = ChannelSettings;\nvar _c;\n$RefreshReg$(_c, \"ChannelSettings\");","map":{"version":3,"names":["React","useState","titleValidationMessage","usernameValidationMessage","avatarUrlValidationMessage","descriptionValidationMessage","validateUsername","validateAvatarUrl","validateTitle","validateDescription","Input","jsxDEV","_jsxDEV","inputs","field","label","validationMessage","type","textarea","ChannelSettings","settings","saveSettings","_s","formState","setFormState","title","isValid","showError","value","username","avatarUrl","description","handleInputValueChange","prevState","handleInputValidationOnBlur","handleFormSubmit","e","preventDefault","isSubmitButtonDisabled","className","children","map","input","onChangeHandler","onBlurHandler","showErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/DashboardPage/Content/Settings/ChannelSettings.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  titleValidationMessage,\n  usernameValidationMessage,\n  avatarUrlValidationMessage,\n  descriptionValidationMessage,\n  validateUsername,\n  validateAvatarUrl,\n  validateTitle,\n  validateDescription,\n} from \"../../../shared/validators\";\nimport { Input } from \"../../../shared/components\";\n\nconst inputs = [\n  {\n    field: \"username\",\n    label: \"Username\",\n    validationMessage: usernameValidationMessage,\n    type: \"text\",\n  },\n  {\n    field: \"title\",\n    label: \"Title\",\n    validationMessage: titleValidationMessage,\n    type: \"text\",\n  },\n  {\n    field: \"avatarUrl\",\n    label: \"Avatar Url\",\n    validationMessage: avatarUrlValidationMessage,\n    type: \"text\",\n  },\n  {\n    field: \"description\",\n    label: \"Description\",\n    validationMessage: descriptionValidationMessage,\n    type: \"text\",\n    textarea: true,\n  },\n];\n\nexport const ChannelSettings = ({ settings, saveSettings }) => {\n  const [formState, setFormState] = useState({\n    title: {\n      isValid: validateTitle(settings.title),\n      showError: false,\n      value: settings.title,\n    },\n    username: {\n      isValid: validateUsername(settings.username),\n      showError: false,\n      value: settings.username,\n    },\n    avatarUrl: {\n      isValid: validateAvatarUrl(settings.avatarUrl),\n      showError: false,\n      value: settings.avatarUrl,\n    },\n    description: {\n      isValid: validateDescription(settings.description),\n      showError: false,\n      value: settings.description,\n    },\n  });\n\n  const handleInputValueChange = (value, field) => {\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value,\n      },\n    }));\n  };\n\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n\n    switch (field) {\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"avatarUrl\":\n        isValid = validateAvatarUrl(value);\n        break;\n      case \"title\":\n        isValid = validateTitle(value);\n        break;\n      case \"description\":\n        isValid = validateDescription(value);\n        break;\n      default:\n        break;\n    }\n\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid,\n      },\n    }));\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    saveSettings({\n      username: formState.username.value,\n      title: formState.title.value,\n      description: formState.description.value,\n      avatarUrl: formState.avatarUrl.value,\n    });\n  };\n\n  const isSubmitButtonDisabled =\n    !formState.username.isValid ||\n    !formState.title.isValid ||\n    !formState.description.isValid ||\n    !formState.avatarUrl.isValid;\n\n  return (\n    <form className=\"settings-form\">\n      {inputs.map((input) => (\n        <Input\n          key={input.field}\n          field={input.field}\n          label={input.label}\n          value={formState[input.field].value}\n          onChangeHandler={handleInputValueChange}\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState[input.field].showError}\n          validationMessage={input.validationMessage}\n          type={input.type}\n          textarea={input.textarea}\n        />\n      ))}\n      <button onClick={handleFormSubmit} disabled={isSubmitButtonDisabled}>\n        Save Changes\n      </button>\n    </form>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}