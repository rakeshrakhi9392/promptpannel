{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madas\\\\Downloads\\\\MostlyStream-master\\\\MostlyStream-master\\\\client\\\\src\\\\DashboardPage\\\\Content\\\\ChannelView\\\\ChannelView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ReactFlvPlayer } from \"react-flv-player\";\nimport { Chat } from \"./Chat\";\nimport { ChannelDescription } from \"./ChannelDescription\";\nimport { useChannelDetails } from \"../../../shared/hooks\";\nimport { LoadingSpinner } from \"../../../shared/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Stream = ({\n  streamUrl\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-video-container\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlvPlayer, {\n      width: \"100%\",\n      height: \"100%\",\n      url: streamUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Stream;\nexport const ChannelView = ({\n  getChannels\n}) => {\n  _s();\n  const {\n    isFetching,\n    getChannelDetails,\n    channelDetails\n  } = useChannelDetails();\n  const {\n    id\n  } = useParams();\n\n  //useEffect(() => {\n  //getChannelDetails(id);\n  // }, []);\n  useEffect(() => {\n    // some code\n  }, [getChannels, isLogged]); // Add missing dependencies\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-video-description-section\",\n      children: [channelDetails.isOnline ? /*#__PURE__*/_jsxDEV(Stream, {\n        streamUrl: channelDetails.streamUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-offline-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Channel is offline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChannelDescription, {\n        channelId: channelDetails.id,\n        title: channelDetails.title,\n        description: channelDetails.description,\n        username: channelDetails.username,\n        getChannels: getChannels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      channelId: channelDetails.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelView, \"pHIm9pRJbBROYfm0UNIhKyUcXcc=\", false, function () {\n  return [useChannelDetails, useParams];\n});\n_c2 = ChannelView;\nvar _c, _c2;\n$RefreshReg$(_c, \"Stream\");\n$RefreshReg$(_c2, \"ChannelView\");","map":{"version":3,"names":["React","useEffect","useParams","ReactFlvPlayer","Chat","ChannelDescription","useChannelDetails","LoadingSpinner","jsxDEV","_jsxDEV","Stream","streamUrl","className","children","width","height","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChannelView","getChannels","_s","isFetching","getChannelDetails","channelDetails","id","isLogged","isOnline","channelId","title","description","username","_c2","$RefreshReg$"],"sources":["C:/Users/madas/Downloads/MostlyStream-master/MostlyStream-master/client/src/DashboardPage/Content/ChannelView/ChannelView.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ReactFlvPlayer } from \"react-flv-player\";\nimport { Chat } from \"./Chat\";\nimport { ChannelDescription } from \"./ChannelDescription\";\nimport { useChannelDetails } from \"../../../shared/hooks\";\nimport { LoadingSpinner } from \"../../../shared/components\";\n\nexport const Stream = ({ streamUrl }) => {\n  return (\n    <div className=\"channel-video-container\">\n      <ReactFlvPlayer width=\"100%\" height=\"100%\" url={streamUrl} />\n    </div>\n  );\n};\n\nexport const ChannelView = ({ getChannels }) => {\n  const { isFetching, getChannelDetails, channelDetails } = useChannelDetails();\n\n  const { id } = useParams();\n\n  //useEffect(() => {\n    //getChannelDetails(id);\n // }, []);\n useEffect(() => {\n  // some code\n}, [getChannels, isLogged]);  // Add missing dependencies\n\n\n  if (isFetching) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <div className=\"channel-container\">\n      <div className=\"channel-video-description-section\">\n        {channelDetails.isOnline ? (\n          <Stream streamUrl={channelDetails.streamUrl} />\n        ) : (\n          <div className=\"channel-offline-placeholder\">\n            <span>Channel is offline</span>\n          </div>\n        )}\n        <ChannelDescription\n          channelId={channelDetails.id}\n          title={channelDetails.title}\n          description={channelDetails.description}\n          username={channelDetails.username}\n          getChannels={getChannels}\n        />\n      </div>\n      <Chat channelId={channelDetails.id} />\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}