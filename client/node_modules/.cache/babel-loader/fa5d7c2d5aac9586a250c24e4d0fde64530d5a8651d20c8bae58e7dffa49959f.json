{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { getChannelSettings, updateChannelSettings } from \"../../api\";\nexport const useChannelSettings = () => {\n  _s();\n  const [channelSettings, setChannelSettings] = useState(null);\n  const fetchChannelSettings = async () => {\n    const response = await getChannelSettings();\n    if (response.error) {\n      var _response$exception, _response$exception$r;\n      return toast.error(((_response$exception = response.exception) === null || _response$exception === void 0 ? void 0 : (_response$exception$r = _response$exception.response) === null || _response$exception$r === void 0 ? void 0 : _response$exception$r.data) || \"Error occurred when fetching channel settings\");\n    }\n    setChannelSettings({\n      username: response.data.username,\n      title: response.data.title,\n      description: response.data.description,\n      avatarUrl: response.data.avatarUrl,\n      streamKey: response.data.streamKey\n    });\n  };\n  // it is saving the changes in the settings of the channel \n  const saveSettings = async data => {\n    const response = await updateChannelSettings(data);\n    if (response.error) {\n      var _response$exception2, _response$exception2$;\n      return toast.error(((_response$exception2 = response.exception) === null || _response$exception2 === void 0 ? void 0 : (_response$exception2$ = _response$exception2.response) === null || _response$exception2$ === void 0 ? void 0 : _response$exception2$.data) || \"Error occurred when saving channel details\");\n    }\n    toast.success(\"Channel settings saved successfully\");\n  };\n  useEffect(() => {\n    fetchChannelSettings();\n  }, []);\n  return {\n    isFetching: !channelSettings,\n    channelSettings,\n    saveSettings\n  };\n};\n_s(useChannelSettings, \"OiIeUygjKrMwsbU97K4q8HbJnQQ=\");","map":{"version":3,"names":["useState","useEffect","toast","getChannelSettings","updateChannelSettings","useChannelSettings","_s","channelSettings","setChannelSettings","fetchChannelSettings","response","error","_response$exception","_response$exception$r","exception","data","username","title","description","avatarUrl","streamKey","saveSettings","_response$exception2","_response$exception2$","success","isFetching"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/shared/hooks/useChannelSettings.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { getChannelSettings, updateChannelSettings } from \"../../api\";\n\nexport const useChannelSettings = () => {\n  const [channelSettings, setChannelSettings] = useState(null);\n\n  const fetchChannelSettings = async () => {\n    const response = await getChannelSettings();\n\n    if (response.error) {\n      return toast.error(\n        response.exception?.response?.data ||\n          \"Error occurred when fetching channel settings\"\n      );\n    }\n\n    setChannelSettings({\n      username: response.data.username,\n      title: response.data.title,\n      description: response.data.description,\n      avatarUrl: response.data.avatarUrl,\n      streamKey: response.data.streamKey,\n    });\n  };\n  // it is saving the changes in the settings of the channel \n  const saveSettings = async (data) => {\n    const response = await updateChannelSettings(data);\n\n    if (response.error) {\n      return toast.error(\n        response.exception?.response?.data ||\n          \"Error occurred when saving channel details\"\n      );\n    }\n\n    toast.success(\"Channel settings saved successfully\");\n  };\n\n  useEffect(() => {\n    fetchChannelSettings();\n  }, []);\n\n  return {\n    isFetching: !channelSettings,\n    channelSettings,\n    saveSettings,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,kBAAkB,EAAEC,qBAAqB,QAAQ,WAAW;AAErE,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMS,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,QAAQ,GAAG,MAAMP,kBAAkB,CAAC,CAAC;IAE3C,IAAIO,QAAQ,CAACC,KAAK,EAAE;MAAA,IAAAC,mBAAA,EAAAC,qBAAA;MAClB,OAAOX,KAAK,CAACS,KAAK,CAChB,EAAAC,mBAAA,GAAAF,QAAQ,CAACI,SAAS,cAAAF,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBF,QAAQ,cAAAG,qBAAA,uBAA5BA,qBAAA,CAA8BE,IAAI,KAChC,+CACJ,CAAC;IACH;IAEAP,kBAAkB,CAAC;MACjBQ,QAAQ,EAAEN,QAAQ,CAACK,IAAI,CAACC,QAAQ;MAChCC,KAAK,EAAEP,QAAQ,CAACK,IAAI,CAACE,KAAK;MAC1BC,WAAW,EAAER,QAAQ,CAACK,IAAI,CAACG,WAAW;MACtCC,SAAS,EAAET,QAAQ,CAACK,IAAI,CAACI,SAAS;MAClCC,SAAS,EAAEV,QAAQ,CAACK,IAAI,CAACK;IAC3B,CAAC,CAAC;EACJ,CAAC;EACD;EACA,MAAMC,YAAY,GAAG,MAAON,IAAI,IAAK;IACnC,MAAML,QAAQ,GAAG,MAAMN,qBAAqB,CAACW,IAAI,CAAC;IAElD,IAAIL,QAAQ,CAACC,KAAK,EAAE;MAAA,IAAAW,oBAAA,EAAAC,qBAAA;MAClB,OAAOrB,KAAK,CAACS,KAAK,CAChB,EAAAW,oBAAA,GAAAZ,QAAQ,CAACI,SAAS,cAAAQ,oBAAA,wBAAAC,qBAAA,GAAlBD,oBAAA,CAAoBZ,QAAQ,cAAAa,qBAAA,uBAA5BA,qBAAA,CAA8BR,IAAI,KAChC,4CACJ,CAAC;IACH;IAEAb,KAAK,CAACsB,OAAO,CAAC,qCAAqC,CAAC;EACtD,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLgB,UAAU,EAAE,CAAClB,eAAe;IAC5BA,eAAe;IACfc;EACF,CAAC;AACH,CAAC;AAACf,EAAA,CA5CWD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}