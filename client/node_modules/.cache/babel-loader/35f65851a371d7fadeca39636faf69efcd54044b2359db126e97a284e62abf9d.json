{"ast":null,"code":"var _jsxFileName = \"/Users/adityasrivastava/Desktop/MostlyStream/client/src/AuthPage/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Logo } from \"./Logo\";\nimport { AuthInput } from \"./AuthInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = ({\n  switchAuthHandler\n}) => {\n  _s();\n  //   const { isLoading, register } = useRegister();\n\n  const [formState, setFormState] = useState({\n    email: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    username: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    },\n    passwordConf: {\n      value: \"\",\n      isValid: false,\n      showError: false\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case \"email\":\n        isValid = validateEmail(value);\n        break;\n      case \"password\":\n        isValid = validatePassword(value);\n        break;\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"passwordConf\":\n        isValid = validatePasswordConf(formState.password.value, value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const handleRegister = event => {\n    event.preventDefault();\n    register(formState.email.value, formState.password.value, formState.username.value);\n  };\n  const isSubmitButtonDisabled = !formState.password.isValid || !formState.email.isValid || !formState.username.isValid || formState.password.value !== formState.passwordConf.value || isLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      text: \"Sign up to Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"email\",\n        label: \"Email\",\n        value: formState.email.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.email.showError,\n        validationMessage: emailValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"username\",\n        label: \"Username\",\n        value: formState.username.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.username.showError,\n        validationMessage: usernameValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"password\",\n        label: \"Password\",\n        value: formState.password.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"password\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.password.showError,\n        validationMessage: passwordValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"passwordConf\",\n        label: \"Password confirmation\",\n        value: formState.passwordConf.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"password\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.passwordConf.showError,\n        validationMessage: passwordConfValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        disabled: isSubmitButtonDisabled,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: switchAuthHandler,\n      className: \"auth-form-switch-label\",\n      children: \"Already have an account ? Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"KlckZRMUK+XRfqdtX2XWv+9MH6M=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Logo","AuthInput","jsxDEV","_jsxDEV","Register","switchAuthHandler","_s","formState","setFormState","email","value","isValid","showError","password","username","passwordConf","handleInputValueChange","field","prevState","handleInputValidationOnBlur","validateEmail","validatePassword","validateUsername","validatePasswordConf","handleRegister","event","preventDefault","register","isSubmitButtonDisabled","isLoading","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","label","onChangeHandler","type","onBlurHandler","showErrorMessage","validationMessage","emailValidationMessage","usernameValidationMessage","passwordValidationMessage","passwordConfValidationMessage","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/AuthPage/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Logo } from \"./Logo\";\nimport { AuthInput } from \"./AuthInput\";\n\nexport const Register = ({ switchAuthHandler }) => {\n//   const { isLoading, register } = useRegister();\n\n  const [formState, setFormState] = useState({\n    email: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n    username: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n    passwordConf: {\n      value: \"\",\n      isValid: false,\n      showError: false,\n    },\n  });\n\n  const handleInputValueChange = (value, field) => {\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value,\n      },\n    }));\n  };\n\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n\n    switch (field) {\n      case \"email\":\n        isValid = validateEmail(value);\n        break;\n      case \"password\":\n        isValid = validatePassword(value);\n        break;\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"passwordConf\":\n        isValid = validatePasswordConf(formState.password.value, value);\n        break;\n      default:\n        break;\n    }\n\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid,\n      },\n    }));\n  };\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n\n    register(\n      formState.email.value,\n      formState.password.value,\n      formState.username.value\n    );\n  };\n\n  const isSubmitButtonDisabled =\n    !formState.password.isValid ||\n    !formState.email.isValid ||\n    !formState.username.isValid ||\n    formState.password.value !== formState.passwordConf.value ||\n    isLoading;\n\n  return (\n    <div className=\"register-container\">\n      <Logo text={\"Sign up to Clone\"} />\n      <form className=\"auth-form\">\n        <AuthInput\n          field=\"email\"\n          label=\"Email\"\n          value={formState.email.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"text\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.email.showError}\n          validationMessage={emailValidationMessage}\n        />\n        <AuthInput\n          field=\"username\"\n          label=\"Username\"\n          value={formState.username.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"text\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.username.showError}\n          validationMessage={usernameValidationMessage}\n        />\n        <AuthInput\n          field=\"password\"\n          label=\"Password\"\n          value={formState.password.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"password\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.password.showError}\n          validationMessage={passwordValidationMessage}\n        />\n        <AuthInput\n          field=\"passwordConf\"\n          label=\"Password confirmation\"\n          value={formState.passwordConf.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"password\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.passwordConf.showError}\n          validationMessage={passwordConfValidationMessage}\n        />\n        <button onClick={handleRegister} disabled={isSubmitButtonDisabled}>\n          Register\n        </button>\n      </form>\n      <span onClick={switchAuthHandler} className=\"auth-form-switch-label\">\n        Already have an account ? Sign in\n      </span>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}