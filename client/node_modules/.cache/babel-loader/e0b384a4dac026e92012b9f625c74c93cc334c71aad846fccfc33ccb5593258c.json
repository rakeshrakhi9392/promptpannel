{"ast":null,"code":"var _jsxFileName = \"/Users/adityasrivastava/Desktop/MostlyStream/client/src/AuthPage/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Logo } from \"./Logo\";\nimport { AuthInput } from \"./AuthInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = ({\n  switchAuthHandler\n}) => {\n  _s();\n  const {\n    isLoading,\n    register\n  } = useRegister();\n\n  //   const [formState, setFormState] = useState({\n  //     email: {\n  //       value: \"\",\n  //       isValid: false,\n  //       showError: false,\n  //     },\n  //     password: {\n  //       value: \"\",\n  //       isValid: false,\n  //       showError: false,\n  //     },\n  //     username: {\n  //       value: \"\",\n  //       isValid: false,\n  //       showError: false,\n  //     },\n  //     passwordConf: {\n  //       value: \"\",\n  //       isValid: false,\n  //       showError: false,\n  //     },\n  //   });\n\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n    switch (field) {\n      case \"email\":\n        isValid = validateEmail(value);\n        break;\n      case \"password\":\n        isValid = validatePassword(value);\n        break;\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"passwordConf\":\n        isValid = validatePasswordConf(formState.password.value, value);\n        break;\n      default:\n        break;\n    }\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const handleRegister = event => {\n    event.preventDefault();\n    register(formState.email.value, formState.password.value, formState.username.value);\n  };\n  const isSubmitButtonDisabled = !formState.password.isValid || !formState.email.isValid || !formState.username.isValid || formState.password.value !== formState.passwordConf.value || isLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      text: \"Sign up to Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"email\",\n        label: \"Email\",\n        value: formState.email.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.email.showError,\n        validationMessage: emailValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"username\",\n        label: \"Username\",\n        value: formState.username.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"text\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.username.showError,\n        validationMessage: usernameValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"password\",\n        label: \"Password\",\n        value: formState.password.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"password\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.password.showError,\n        validationMessage: passwordValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        field: \"passwordConf\",\n        label: \"Password confirmation\",\n        value: formState.passwordConf.value,\n        onChangeHandler: handleInputValueChange,\n        type: \"password\",\n        onBlurHandler: handleInputValidationOnBlur,\n        showErrorMessage: formState.passwordConf.showError,\n        validationMessage: passwordConfValidationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        disabled: isSubmitButtonDisabled,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: switchAuthHandler,\n      className: \"auth-form-switch-label\",\n      children: \"Already have an account ? Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"USp0BEhzvsrRNpBf0AIkXfKfVfE=\", true);\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Logo","AuthInput","jsxDEV","_jsxDEV","Register","switchAuthHandler","_s","isLoading","register","useRegister","handleInputValueChange","value","field","setFormState","prevState","handleInputValidationOnBlur","isValid","validateEmail","validatePassword","validateUsername","validatePasswordConf","formState","password","showError","handleRegister","event","preventDefault","email","username","isSubmitButtonDisabled","passwordConf","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","label","onChangeHandler","type","onBlurHandler","showErrorMessage","validationMessage","emailValidationMessage","usernameValidationMessage","passwordValidationMessage","passwordConfValidationMessage","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/AuthPage/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Logo } from \"./Logo\";\nimport { AuthInput } from \"./AuthInput\";\n\nexport const Register = ({ switchAuthHandler }) => {\n  const { isLoading, register } = useRegister();\n\n//   const [formState, setFormState] = useState({\n//     email: {\n//       value: \"\",\n//       isValid: false,\n//       showError: false,\n//     },\n//     password: {\n//       value: \"\",\n//       isValid: false,\n//       showError: false,\n//     },\n//     username: {\n//       value: \"\",\n//       isValid: false,\n//       showError: false,\n//     },\n//     passwordConf: {\n//       value: \"\",\n//       isValid: false,\n//       showError: false,\n//     },\n//   });\n\n  const handleInputValueChange = (value, field) => {\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value,\n      },\n    }));\n  };\n\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = false;\n\n    switch (field) {\n      case \"email\":\n        isValid = validateEmail(value);\n        break;\n      case \"password\":\n        isValid = validatePassword(value);\n        break;\n      case \"username\":\n        isValid = validateUsername(value);\n        break;\n      case \"passwordConf\":\n        isValid = validatePasswordConf(formState.password.value, value);\n        break;\n      default:\n        break;\n    }\n\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid,\n      },\n    }));\n  };\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n\n    register(\n      formState.email.value,\n      formState.password.value,\n      formState.username.value\n    );\n  };\n\n  const isSubmitButtonDisabled =\n    !formState.password.isValid ||\n    !formState.email.isValid ||\n    !formState.username.isValid ||\n    formState.password.value !== formState.passwordConf.value ||\n    isLoading;\n\n  return (\n    <div className=\"register-container\">\n      <Logo text={\"Sign up to Clone\"} />\n      <form className=\"auth-form\">\n        <AuthInput\n          field=\"email\"\n          label=\"Email\"\n          value={formState.email.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"text\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.email.showError}\n          validationMessage={emailValidationMessage}\n        />\n        <AuthInput\n          field=\"username\"\n          label=\"Username\"\n          value={formState.username.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"text\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.username.showError}\n          validationMessage={usernameValidationMessage}\n        />\n        <AuthInput\n          field=\"password\"\n          label=\"Password\"\n          value={formState.password.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"password\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.password.showError}\n          validationMessage={passwordValidationMessage}\n        />\n        <AuthInput\n          field=\"passwordConf\"\n          label=\"Password confirmation\"\n          value={formState.passwordConf.value}\n          onChangeHandler={handleInputValueChange}\n          type=\"password\"\n          onBlurHandler={handleInputValidationOnBlur}\n          showErrorMessage={formState.passwordConf.showError}\n          validationMessage={passwordConfValidationMessage}\n        />\n        <button onClick={handleRegister} disabled={isSubmitButtonDisabled}>\n          Register\n        </button>\n      </form>\n      <span onClick={switchAuthHandler} className=\"auth-form-switch-label\">\n        Already have an account ? Sign in\n      </span>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}