{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { getChannelDetails as getChannelDetailsRequest } from \"../../api\";\nexport const useChannelDetails = () => {\n  _s();\n  const [channelDetails, setChannelDetails] = useState(null);\n  const getChannelDetails = async id => {\n    const responseData = await getChannelDetailsRequest(id);\n    if (responseData.error) {\n      var _responseData$excepti, _responseData$excepti2;\n      return toast.error(((_responseData$excepti = responseData.exception) === null || _responseData$excepti === void 0 ? void 0 : (_responseData$excepti2 = _responseData$excepti.response) === null || _responseData$excepti2 === void 0 ? void 0 : _responseData$excepti2.data) || \"Error occurred when fetching channel details\");\n    }\n    setChannelDetails(responseData.data);\n  };\n  return {\n    channelDetails,\n    isFetching: !channelDetails,\n    getChannelDetails\n  };\n};\n_s(useChannelDetails, \"K/9K33dnDzUu1HztOWpaC/fo6GM=\");","map":{"version":3,"names":["useState","toast","getChannelDetails","getChannelDetailsRequest","useChannelDetails","_s","channelDetails","setChannelDetails","id","responseData","error","_responseData$excepti","_responseData$excepti2","exception","response","data","isFetching"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/shared/hooks/useChannelDetails.js"],"sourcesContent":["import { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { getChannelDetails as getChannelDetailsRequest } from \"../../api\";\n\nexport const useChannelDetails = () => {\n  const [channelDetails, setChannelDetails] = useState(null);\n\n  const getChannelDetails = async (id) => {\n    const responseData = await getChannelDetailsRequest(id);\n\n    if (responseData.error) {\n      return toast.error(\n        responseData.exception?.response?.data ||\n          \"Error occurred when fetching channel details\"\n      );\n    }\n\n    setChannelDetails(responseData.data);\n  };\n\n  return {\n    channelDetails,\n    isFetching: !channelDetails,\n    getChannelDetails,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,iBAAiB,IAAIC,wBAAwB,QAAQ,WAAW;AAEzE,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAME,iBAAiB,GAAG,MAAOM,EAAE,IAAK;IACtC,MAAMC,YAAY,GAAG,MAAMN,wBAAwB,CAACK,EAAE,CAAC;IAEvD,IAAIC,YAAY,CAACC,KAAK,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACtB,OAAOX,KAAK,CAACS,KAAK,CAChB,EAAAC,qBAAA,GAAAF,YAAY,CAACI,SAAS,cAAAF,qBAAA,wBAAAC,sBAAA,GAAtBD,qBAAA,CAAwBG,QAAQ,cAAAF,sBAAA,uBAAhCA,sBAAA,CAAkCG,IAAI,KACpC,8CACJ,CAAC;IACH;IAEAR,iBAAiB,CAACE,YAAY,CAACM,IAAI,CAAC;EACtC,CAAC;EAED,OAAO;IACLT,cAAc;IACdU,UAAU,EAAE,CAACV,cAAc;IAC3BJ;EACF,CAAC;AACH,CAAC;AAACG,EAAA,CArBWD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}