{"ast":null,"code":"import io from \"socket.io-client\";\nimport { useStore } from \"../store/store.js\";\nlet socket;\nexport const connectWithSocketServer = () => {\n  socket = io(\"http://localhost:5002\");\n  socket.on(\"connect\", () => {\n    console.log(\"successfully connected with socket.io server\");\n    console.log(socket.id);\n  });\n  socket.on(\"chat-history\", chatHistory => {\n    const {\n      setChatHistory\n    } = useStore.getState();\n    setChatHistory(chatHistory);\n  });\n  socket.on(\"chat-message\", chatMessage => {\n    const {\n      chatHistory,\n      setChatHistory\n    } = useStore.getState();\n    console.log(chatMessage);\n    setChatHistory({\n      channelId: chatHistory.channelId,\n      messages: [...chatHistory.messages, {\n        author: chatMessage.author,\n        content: chatMessage.content,\n        date: chatMessage.date\n      }]\n    });\n  });\n};\nexport const getChatHistory = channelId => {\n  socket.emit(\"chat-history\", channelId);\n};\nexport const sendChatMessage = (toChannel, message) => {\n  socket.emit(\"chat-message\", {\n    toChannel,\n    message\n  });\n};\nexport const closeChatSubscription = channelId => {\n  socket.emit(\"chat-unsubscribe\", channelId);\n};","map":{"version":3,"names":["io","useStore","socket","connectWithSocketServer","on","console","log","id","chatHistory","setChatHistory","getState","chatMessage","channelId","messages","author","content","date","getChatHistory","emit","sendChatMessage","toChannel","message","closeChatSubscription"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/socketConn/socketConn.js"],"sourcesContent":["import io from \"socket.io-client\";\nimport { useStore } from \"../store/store.js\";\n\nlet socket;\n\nexport const connectWithSocketServer = () => {\n  socket = io(\"http://localhost:5002\");\n\n  socket.on(\"connect\", () => {\n    console.log(\"successfully connected with socket.io server\");\n    console.log(socket.id);\n  });\n\n  socket.on(\"chat-history\", (chatHistory) => {\n    const { setChatHistory } = useStore.getState();\n\n    setChatHistory(chatHistory);\n  });\n\n  socket.on(\"chat-message\", (chatMessage) => {\n    const { chatHistory, setChatHistory } = useStore.getState();\n\n    console.log(chatMessage);\n\n    setChatHistory({\n      channelId: chatHistory.channelId,\n      messages: [\n        ...chatHistory.messages,\n        {\n          author: chatMessage.author,\n          content: chatMessage.content,\n          date: chatMessage.date,\n        },\n      ],\n    });\n  });\n};\n\nexport const getChatHistory = (channelId) => {\n  socket.emit(\"chat-history\", channelId);\n};\n\nexport const sendChatMessage = (toChannel, message) => {\n  socket.emit(\"chat-message\", {\n    toChannel,\n    message,\n  });\n};\n\nexport const closeChatSubscription = (channelId) => {\n  socket.emit(\"chat-unsubscribe\", channelId);\n};\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,IAAIC,MAAM;AAEV,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAC3CD,MAAM,GAAGF,EAAE,CAAC,uBAAuB,CAAC;EAEpCE,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;IAC3DD,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACK,EAAE,CAAC;EACxB,CAAC,CAAC;EAEFL,MAAM,CAACE,EAAE,CAAC,cAAc,EAAGI,WAAW,IAAK;IACzC,MAAM;MAAEC;IAAe,CAAC,GAAGR,QAAQ,CAACS,QAAQ,CAAC,CAAC;IAE9CD,cAAc,CAACD,WAAW,CAAC;EAC7B,CAAC,CAAC;EAEFN,MAAM,CAACE,EAAE,CAAC,cAAc,EAAGO,WAAW,IAAK;IACzC,MAAM;MAAEH,WAAW;MAAEC;IAAe,CAAC,GAAGR,QAAQ,CAACS,QAAQ,CAAC,CAAC;IAE3DL,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;IAExBF,cAAc,CAAC;MACbG,SAAS,EAAEJ,WAAW,CAACI,SAAS;MAChCC,QAAQ,EAAE,CACR,GAAGL,WAAW,CAACK,QAAQ,EACvB;QACEC,MAAM,EAAEH,WAAW,CAACG,MAAM;QAC1BC,OAAO,EAAEJ,WAAW,CAACI,OAAO;QAC5BC,IAAI,EAAEL,WAAW,CAACK;MACpB,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIL,SAAS,IAAK;EAC3CV,MAAM,CAACgB,IAAI,CAAC,cAAc,EAAEN,SAAS,CAAC;AACxC,CAAC;AAED,OAAO,MAAMO,eAAe,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EACrDnB,MAAM,CAACgB,IAAI,CAAC,cAAc,EAAE;IAC1BE,SAAS;IACTC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAIV,SAAS,IAAK;EAClDV,MAAM,CAACgB,IAAI,CAAC,kBAAkB,EAAEN,SAAS,CAAC;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}