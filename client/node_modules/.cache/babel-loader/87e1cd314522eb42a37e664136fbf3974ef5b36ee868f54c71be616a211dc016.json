{"ast":null,"code":"var _jsxFileName = \"/Users/adityasrivastava/Desktop/MostlyStream/client/src/DashboardPage/Content/Settings/PasswordSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { passwordValidationMessage, validatePassword } from \"../../../shared/validators\";\nimport { Input } from \"../../../shared/components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  field: \"password\",\n  label: \"Current password\",\n  validationMessage: passwordValidationMessage,\n  type: \"password\"\n}, {\n  field: \"newPassword\",\n  label: \"New password\",\n  validationMessage: passwordValidationMessage,\n  type: \"password\"\n}];\nexport const PasswordSettings = () => {\n  _s();\n  const [formState, setFormState] = useState({\n    password: {\n      isValid: false,\n      showError: false,\n      value: \"\"\n    },\n    newPassword: {\n      isValid: false,\n      showError: false,\n      value: \"\"\n    }\n  });\n  const handleInputValueChange = (value, field) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value\n      }\n    }));\n  };\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = validatePassword(value);\n    setFormState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid\n      }\n    }));\n  };\n  const isSubmitButtonDisabled = !formState.password.isValid || !formState.newPassword.isValid;\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    // TODO\n    // Http call to change the password\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"settings-form\",\n    children: [inputs.map(input => /*#__PURE__*/_jsxDEV(Input, {\n      field: input.field,\n      label: input.label,\n      value: formState[input.field].value,\n      onBlurHandler: handleInputValidationOnBlur,\n      onChangeHandler: handleInputValueChange,\n      showErrorMessage: formState[input.field].showError,\n      validationMessage: input.validationMessage,\n      type: input.type\n    }, input.field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitButtonDisabled,\n      onClick: handleFormSubmit,\n      children: \"Save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordSettings, \"syXQDGHnS9ZcpC+xjNXvuhcseJc=\");\n_c = PasswordSettings;\nvar _c;\n$RefreshReg$(_c, \"PasswordSettings\");","map":{"version":3,"names":["React","useState","passwordValidationMessage","validatePassword","Input","jsxDEV","_jsxDEV","inputs","field","label","validationMessage","type","PasswordSettings","_s","formState","setFormState","password","isValid","showError","value","newPassword","handleInputValueChange","prevState","handleInputValidationOnBlur","isSubmitButtonDisabled","handleFormSubmit","e","preventDefault","className","children","map","input","onBlurHandler","onChangeHandler","showErrorMessage","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/adityasrivastava/Desktop/MostlyStream/client/src/DashboardPage/Content/Settings/PasswordSettings.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  passwordValidationMessage,\n  validatePassword,\n} from \"../../../shared/validators\";\nimport { Input } from \"../../../shared/components\";\n\nconst inputs = [\n  {\n    field: \"password\",\n    label: \"Current password\",\n    validationMessage: passwordValidationMessage,\n    type: \"password\",\n  },\n  {\n    field: \"newPassword\",\n    label: \"New password\",\n    validationMessage: passwordValidationMessage,\n    type: \"password\",\n  },\n];\n\nexport const PasswordSettings = () => {\n  const [formState, setFormState] = useState({\n    password: {\n      isValid: false,\n      showError: false,\n      value: \"\",\n    },\n    newPassword: {\n      isValid: false,\n      showError: false,\n      value: \"\",\n    },\n  });\n\n  const handleInputValueChange = (value, field) => {\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        value,\n      },\n    }));\n  };\n\n  const handleInputValidationOnBlur = (value, field) => {\n    let isValid = validatePassword(value);\n\n    setFormState((prevState) => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        isValid,\n        showError: !isValid,\n      },\n    }));\n  };\n\n  const isSubmitButtonDisabled =\n    !formState.password.isValid || !formState.newPassword.isValid;\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    // TODO\n    // Http call to change the password\n  };\n\n  return (\n    <form className=\"settings-form\">\n      {inputs.map((input) => (\n        <Input\n          key={input.field}\n          field={input.field}\n          label={input.label}\n          value={formState[input.field].value}\n          onBlurHandler={handleInputValidationOnBlur}\n          onChangeHandler={handleInputValueChange}\n          showErrorMessage={formState[input.field].showError}\n          validationMessage={input.validationMessage}\n          type={input.type}\n        />\n      ))}\n      <button disabled={isSubmitButtonDisabled} onClick={handleFormSubmit}>\n        Save changes\n      </button>\n    </form>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}